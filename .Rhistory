for(i in 1:40){coinflip1 <- rbinom(1, size=1, prob=0.5); coinflip2 <- rbinom(1, size=1, prob=0.5); if(coinflip1) {dm[i,] <- dm[i,] + rep(c(0,5), each=5)}; if(coinflip2){dm[i,] <- dm[i,] + rep(c(0,5), 5)}}
hh <- hclust(dist(dm))
dmo <- dm[hh$order,]
svd2 <- svd(scale(dmo))
image(t(dmo)[,nrow(dmo):1])
plot(rep(c(0,1), each=5), pch=19, xlab="column", ylab="pattern 1")
plot(rep(c(0,1), 5), pch=19, xlab="column", ylab="pattern 2")
install.packages("impute")
load("data/face.rda")
?heat.colors
data(volcano)
heat.colors(volcano)
plot(heat.colors(volcano))
head(volcano)
plot(volcano)
dim(volcano)
plot(volcano[1:nrow(volcano),], volcano[,1:ncol(volcano)])
colors()
?gray
gray(21)
gray(.21)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(0.5)
pal(0.25)
pal2 <- colorRamp(c("red", "green", "blue"))
pal2(0)
pal2(.5)
pal2(0.6)
pal(seq(1:10))
pal(seq(0:1, length=10))
pal(seq(0:1, steps=10))
pal(seq(0, 1, 10))
pal(seq(0:1, len-10))
pal(seq(0:1, len=10))
pal(seq(0, 1, len=10))
?seq
?seq.along
?seq_along
seq_along(0,1)
seq_along(10)
seq_along(10-)
seq_along(100)
seq_along(c(1, 2, 3, 4, 5))
seq_along(c(1, 2, 3, 4, 5, 109, 120000))
pal2 <- colorRampPalette(c("red", "yellow", "green"))
pal2
pal2(1)
pal2(2)
pal2(3)
pal2(6)
install.packages("RColorBrewer")
library(RColorBrewer)
?YlOrRd
?image
image(volcano)
?image
image(volcano, topo.colors)
image(volcano, col=topo.colors)
image(volcano, col=topo.colors())
image(volcano, col="topo.colors"
)
?image
topo.colors()
?topo.colors
?image
image(volcano, col=topo.colors(10))
image(volcano, col=topo.colors(20))
image(volcano, col=topo.colors(100))
mycols <- brewer.pal(5, "BuGn")
mycols
image(volcano, col=mycols)
mypal <- colorRampPalette(mycols)
mypal
image(volcano, mypal(10))
image(volcano, col=mypal(10))
image(volcano, col=mypal(20))
?brewer.pal
display.brewer.all()
image(volcano, col=rainbow(20))
image(volcano, col=mypal(20))
x <- rnorm(10000)
y <- rnorm(10000)
smoothScatter(x,y)
?smoothscatter
?smoothScatter
smoothScatter(x,y, colramp=colorRampPalette(c, "white", "red"))
smoothScatter(x,y, colramp=colorRampPalette(c("white", "red"))
)
smoothScatter(x,y, colramp=colorRampPalette(c("white", "BuGn")))
smoothScatter(x,y, colramp=colorRampPalette(c("white", "steelblue")))
?rbg
?rgb
install.packages("colorspace")
?colorspace
??colorspace
plot(x, y, col=rgb(0,0,0, 0.1))
plot(x, y, col=rgb(0,0,0, 0.1), pch = 19)
setwd("C:/Users/570815/Dropbox/Coursera/R Working Directory")
epa09 <- read.table("./data/RD_501_88101_2009/RD_501_88101_2009-0.txt")
head(epa09)
epa09 <- read.table("./data/RD_501_88101_2009/RD_501_88101_2009-0.txt", sep="|")
head(epa09)
tail(epa09)
grep ^RC RD_501_88101_2009-0.txt
?grep
grep(^RC, epa09$V1)
grep("^RC", epa09$V1)
grep("^RD", epa09$V1)
grep("^RC", epa09$V1)
epa12 <- read.table("./data/RD_501_88101_2012/RD_501_88101_2012-0.txt", sep="\")
epa12 <- read.table("./data/RD_501_88101_2012/RD_501_88101_2012-0.txt", sep="|")
rm(epa09)
epa99 <- read.table("./data/RD_501_88101_1999/RD_501_88101_1999-0.txt", comment.char="#", header=FALSE, sep="|", na.strings="")
dim(epa99)
cnames1 <- readLines("./data/RD_501_88101_1999/RD_501_88101_1999-0.txt", 1)
cnames1
cnames1 <- str.split(cnames, "|", fixed=TRUE)
cnames1 <- strsplit(cnames, "|", fixed=TRUE)
cnames1 <- strsplit(cnames1, "|", fixed=TRUE)
cnames1
cnames1[[1]]
cnames1[[1]][1]
cnames1[1][[1]]
cnames1[[1]][1] <- "RD"
cnames1
names(epa99) <- cnames1
head(epa99)
names(epa99) <- cnames1[[1]]
head(epa99)
?make.names
names(epa99) <- make.names(cnames1[[1]])
head
(epa99)
head(epa99)
x0 <- epa99$Sample.Value
class(x0)
str(x0)
summary(x0)
mean(is.na(x0))
epa12 <- read.table("./data/RD_501_88101_2012/RD_501_88101_2012-0.txt", comment.char="#", header=FALSE, sep="|", na.strings="")
dim(epa12)
head(epa12)
nrow(epa12)
tail(epa12)
rm(epa12)
epa12 <- read.table("./data/RD_501_88101_2012/RD_501_88101_2012-0.txt", comment.char="#", header=FALSE, sep="|", na.strings="")
dim(epa12)
names(epa12) <- make.names(cnames1[[1]])
head(epa12)
mean(is.na(epa12$Sample.Value))
x1 <- epa12$Sample.Value
str(x1)
summary(x1)
summary(x0)
boxplot(x0, x1)
library(ggplot2)
?bwplot
library(lattice)
?bwplot
boxplot(log10(x0), log10(x1))
summary(x1)
negative <- x1 < 0
str(negative)
sum(negative, na.rm=TRUE)
mean(negative, na.rm=T)
dates <- epa12$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
str(dates)
hist(dates, "month")
hist(dates[negative], "month")
site99 <- unique(subset(epa99, State.Code==36, c(County.Code, Site.ID)))
site12 <- unique(subset(epa12, State.Code==36, c(County.Code, Site.ID)))
head(site99)
site99 <- paste(site99[,1], site99[,2], sep=".")
site12 <- paste(site12[,1], site12[,2], sep=".")
head(site99)
head(site12)
str(site99)
str(site12)
both <- intersect(site99, site12)
both
epa99$county.site <- with(epa99, paste(County.Code, Site.ID, sep="."))
epa12$county.site <- with(epa12, paste(County.Code, Site.ID, sep="."))
cnt99 <- subset(epa99, State.Code==36 & county.site %in% both)
cnt12 <- subset(epa12, State.Code==36 & county.site %in% both)
head(cnt99)
sapply(split(cnt99, cnt99$county.site), nrow)
sapply(split(cnt12, cnt12$county.site), nrow)
epa99sub <- subset(epa99, State.Code==36 & County.Code==63 & Site.ID==2008)
epa12sub <- subset(epa12, State.Code==36 & County.Code==63 & Site.ID==2008)
dim(epa99sub)
sim(epa12sub)
dim(epa12sub)
dates12 <- as.Date(as.character(epa12sub$Date))
dates12 <- as.Date(as.character(epa12sub$Date), "%Y%m%d")
pm12 <- epa12sub$Sample.Value
plot(dates12, pm12)
dates99 <- as.Date(as.character(epa99sub$Date), "%Y%m%d")
pm99 <- epa99sub$Sample.Value
plot(dates99, pm99)
par(mfrow=c(1,2))
par(mar=c(4,4,2,1))
plot(dates99, pm99, pch=20)
abline(h=median(pm99, na.rm=T))
plot(dates12, pm12)
abline(h=median(pm12, na.rm=T))
range(pm99, pm12, na.rm=T)
rng <- range(pm99, pm12, na.rm=T)
plot(dates99, pm99, pch=20, ylim=rng)
abline(h=median(pm99), na.rm=T)
abline(h=median(pm99, na.rm=T))
plot(dates12, pm12, pch=20, ylim=rng)
abline(h=median(pm12, na.rm=T))
mn99 <- with(epa99, tapply(Sample.Value, State.Code, mean, na.rm=T))
mn99
summary(mn99)
str(mn99)
mn12 <- with(epa12, tapply(Sample.Value, State.Code, mean, na.rm=T))
summary(mn12)
d99 <- data.frame(state=names(mn99), mean= mn99)
d12 <- data.frame(state=names(mn12), mean= mn12)
head(d99)
head(d12)
mrg <- merge(d99, d12, by="state")
head(mrg)
par(mfrow=c(1,1))
with(mrg, plot(rep(1999, 52), mrg[,2], xlim=c(1998, 2013))
)
tail(mrg)
with(mrg, plot(rep(1999, 53), mrg[,2], xlim=c(1998, 2013)))
with(mrg, points(rep(2012, 53), mrg[,3]))
?segments
segments(rep(1999, 53), mrg[,2], rep(2012, 53), mrg[,3])
rm(list=ls())
setwd("C:/Users/570815/Dropbox/Coursera/R Working Directory/ExData_Plotting2")
nei <- readRDS("./data/summarySCC_PM25.rds")
scc <- readRDS("./data/Source_Classification_Code.rds")
head(scc)
str(scc)
levels(scc$EI.Sector)
?grep
test <- grep("coal", levels(scc$EI.Sector), ignore.case=T)
test
test <- grep("comb*coal", levels(scc$EI.Sector), ignore.case=T, value=T)
test
test <- grep("comb * coal", levels(scc$EI.Sector), ignore.case=T, value=T)
test
test <- grep("comb .* coal", levels(scc$EI.Sector), ignore.case=T, value=T)
test
str(nei)
str(scc)
coalComb <- grep("comb .* coal", levels(scc$EI.Sector), ignore.case=T, value=T)
test <- scc[scc$EI.Sector %in% coalComb,]$SCC
test
levels(test)
test <- scc[scc$EI.Sector == coalComb,]$SCC
scc$SCC
scc$EI.Sector == "Fuel Comb - Comm/Institutional - Coal"
scc$EI.Sector %in% coalComb
test2 <- scc$EI.Sector %in% coalComb
sum(test2)
?subset
test2 <- scc[scc$EI.Sector %in% coalComb,]
head(test2)
levels(test2$scc)
levels(test2$SCC)
str(test2)
?unique
unique(test2$SCC)
test3 <- unique(scc[scc$EI.Sector %in% coalComb,]$SCC)
test3
test3[99]
test3[98]
coalCombSCC <- unique(scc[scc$EI.Sector %in% coalComb,]$SCC)
identical(coalCombSCC, test3)
head(nei)
neiCoal <- nei[nei$SCC %in% coalCombSCC,]
str(neiCoal)
unique(neiCoal$SCC)
?aggregate
test <- aggregate(neiCoal$Emissions, by=list(Year = neiCoal$year), FUN=sum)
test
coalEmByYear <- aggregate(neiCoal$Emissions, by=list(Year = neiCoal$year), FUN=sum)
identical(coalEmByYear, test)
plot(coalEmByYear$Year, coalEmByYear$x, pch=19,
main="Total Yearly Emissions: Coal Combustion Sources", xlab="Year",
ylab="Total Coal Emissions", xlim=c(1998, 2010))
abline(lm(coalEmByYear$x ~ coalEmByYear$Year))
text(coalEmByYear$Year + 0.5, coalEmByYear$x,
labels=c("1999", "2002", "2005", "2008"))
## get subset of Baltimore data (fips == "24510") and aggregate by year and type
balt <- nei[nei$fips=="24510",])
sumByYearType <- aggregate(balt$Emissions,
by=list(Year=balt$year, Type=balt$type), FUN=sum)
## open graphics device - dimensions are different than default for clarity
png(file = "plot3.png", width = 800, height = 400, units = "px")
## plot the totals faceted by type
library(ggplot2)
qplot(data=sumByYearType, Year, x, facets = .~Type,
main="Baltimore, MD Total Emission Trends by Source Type", xlab="Year",
ylab="Total Emissions (tons)")
## close graphics device
dev.off()
## get subset of Baltimore data (fips == "24510") and aggregate by year and type
balt <- nei[nei$fips=="24510",]
sumByYearType <- aggregate(balt$Emissions,
by=list(Year=balt$year, Type=balt$type), FUN=sum)
## open graphics device - dimensions are different than default for clarity
png(file = "plot3.png", width = 800, height = 400, units = "px")
## plot the totals faceted by type
library(ggplot2)
qplot(data=sumByYearType, Year, x, facets = .~Type,
main="Baltimore, MD Total Emission Trends by Source Type", xlab="Year",
ylab="Total Emissions (tons)")
## close graphics device
dev.off()
## get Baltimore data (subset on fips == "24510"), then aggregate totals by year
balt <- nei[nei$fips=="24510",]
baltYears <- aggregate(balt$Emissions, by=list(Year = balt$year), FUN=sum)
## open graphics device
png(file = "plot2.png", width = 480, height = 480, units = "px")
## plot
plot(baltYears$Year, baltYears$x, pch=19,
main="Total Yearly Emissions: Baltimore, MD Data", xlab="Year",
ylab="Total Emissions (tons)", xlim=c(1998, 2010))
abline(lm(baltYears$x ~ baltYears$Year))
text(baltYears$Year + 0.5, baltYears$x,
labels=c("1999", "2002", "2005", "2008"))
## close graphics device
dev.off()
## get totals by year
totals <- aggregate(nei$Emissions, by=list(Year =nei$year), FUN=sum)
## open graphics device
png(file = "plot1.png", width = 480, height = 480, units = "px")
## plot
plot(totals$Year, totals$x, pch=19, main="Total Emissions per Year", xlab="Year",
ylab="Total Emissions (tons)", xlim=c(1998, 2010))
abline(lm(totals$x ~ totals$Year))
text(totals$Year + 0.5, totals$x, labels=c("1999", "2002", "2005", "2008"))
## close graphics device
dev.off()
## open graphics device
png(file = "plot4.png", width = 480, height = 480, units = "px")
## plot
plot(coalEmByYear$Year, coalEmByYear$x, pch=19,
main="Total Yearly Emissions: Coal Combustion Sources", xlab="Year",
ylab="Total Coal Emissions (tons)", xlim=c(1998, 2010))
abline(lm(coalEmByYear$x ~ coalEmByYear$Year))
text(coalEmByYear$Year + 0.5, coalEmByYear$x,
labels=c("1999", "2002", "2005", "2008"))
## close graphics device
dev.off()
## open graphics device
png(file = "plot1.png", width = 480, height = 480, units = "px")
## plot
plot(totals$Year, totals$x, pch=19, main="Total PM2.5 Emissions per Year",
xlab="Year", ylab="Total Emissions (tons)", xlim=c(1998, 2010))
abline(lm(totals$x ~ totals$Year))
text(totals$Year + 0.5, totals$x, labels=c("1999", "2002", "2005", "2008"))
## close graphics device
dev.off()
## get Baltimore data (subset on fips == "24510"), then aggregate totals by year
balt <- nei[nei$fips=="24510",]
baltYears <- aggregate(balt$Emissions, by=list(Year = balt$year), FUN=sum)
## open graphics device
png(file = "plot2.png", width = 480, height = 480, units = "px")
## plot
plot(baltYears$Year, baltYears$x, pch=19,
main="Total Yearly PM2.5 Emissions: Baltimore, MD Data", xlab="Year",
ylab="Total Emissions (tons)", xlim=c(1998, 2010))
abline(lm(baltYears$x ~ baltYears$Year))
text(baltYears$Year + 0.5, baltYears$x,
labels=c("1999", "2002", "2005", "2008"))
## close graphics device
dev.off()
## get subset of Baltimore data (fips == "24510") and aggregate by year and type
balt <- nei[nei$fips=="24510",]
sumByYearType <- aggregate(balt$Emissions,
by=list(Year=balt$year, Type=balt$type), FUN=sum)
## open graphics device - dimensions are different than default for clarity
png(file = "plot3.png", width = 800, height = 400, units = "px")
## plot the totals faceted by type
library(ggplot2)
qplot(data=sumByYearType, Year, x, facets = .~Type,
main="Baltimore, MD Total PM2.5 Emission Trends by Source Type",
xlab="Year", ylab="Total Emissions (tons)")
## close graphics device
dev.off()
## open graphics device
png(file = "plot4.png", width = 480, height = 480, units = "px")
## plot
plot(coalEmByYear$Year, coalEmByYear$x, pch=19,
main="Total Yearly PM2.5 Emissions: Coal Combustion Sources", xlab="Year",
ylab="Total Coal Emissions (tons)", xlim=c(1998, 2010))
abline(lm(coalEmByYear$x ~ coalEmByYear$Year))
text(coalEmByYear$Year + 0.5, coalEmByYear$x,
labels=c("1999", "2002", "2005", "2008"))
## close graphics device
dev.off()
?ls
rm(list=ls(!c("nei, scc")))
rm(list=ls(!c("nei", "scc")))
rm(list=ls(!c(nei, scc)))
rm(list=ls())
## load into R
nei <- readRDS("./data/summarySCC_PM25.rds")
scc <- readRDS("./data/Source_Classification_Code.rds")
## get Baltimore subset
balt <- nei[nei$fips=="24510",]
str(scc)
levels(scc$EI.Sector)
mv <- grep(".* on-road *.", levels(scc$EI.Sector), ignore.case=T, value=T)
mv
test <- unique(scc[scc$EI.Sector %in% mv,]$SCC)
head(test)
mvSCC <- unique(scc[scc$EI.Sector %in% mv,]$SCC)
baltMV <- balt[balt$SCC %in% mvSCC,]
head(baltMV)
baltMVByYear <- aggregate(baltMV$Emissions, by=list(Year=baltMV$year), FUN=sum)
baltMVByYear
plot(baltMVByYear$Year, baltMVByYear$x, pch=19,
main="Total Yearly PM2.5 Emissions: Motor Vehicle Sources in Baltimore, MD",
xlab="Year", ylab="Total MV Emissions (tons)", xlim=c(1998, 2010))
abline(lm(baltMVByYear$x ~ baltMVByYear$Year))
text(baltMVByYear$Year + 0.5, baltMVByYear$x,
labels=c("1999", "2002", "2005", "2008"))
## open graphics device
png(file = "plot5.png", width = 480, height = 480, units = "px")
## plot
plot(baltMVByYear$Year, baltMVByYear$x, pch=19,
main="Total Yearly PM2.5 Emissions: Motor Vehicle Sources in Baltimore, MD",
xlab="Year", ylab="Total MV Emissions (tons)", xlim=c(1998, 2010))
abline(lm(baltMVByYear$x ~ baltMVByYear$Year))
text(baltMVByYear$Year + 0.5, baltMVByYear$x,
labels=c("1999", "2002", "2005", "2008"))
## close graphics device
dev.off()
## open graphics device
png(file = "plot5.png", width = 480, height = 480, units = "px")
## plot
plot(baltMVByYear$Year, baltMVByYear$x, pch=19,
main="Total Yearly PM2.5 Emissions: Motor Vehicles in Baltimore, MD",
xlab="Year", ylab="Total MV Emissions (tons)", xlim=c(1998, 2010))
abline(lm(baltMVByYear$x ~ baltMVByYear$Year))
text(baltMVByYear$Year + 0.5, baltMVByYear$x,
labels=c("1999", "2002", "2005", "2008"))
## close graphics device
dev.off()
1 %in% c(2, 4, 1)
1 == (1|2)
baltLA <- nei[nei$fips %in% c("24510", "06037"),]
head(baltLA)
unique(baltLA$fips)
mv <- grep(".* on-road *.", levels(scc$EI.Sector), ignore.case=T, value=T)
mvSCC <- unique(scc[scc$EI.Sector %in% mv,]$SCC)
baltLAmv <- baltLA[baltLA$SCC %in% mvSCC,]
dim(baltLAmv)
head(baltLAmv)
baltLAmvbyYear < aggregate(baltLAmv$Emissions,
by=list(Year=baltLAmv$year), FUN=sum)
baltLAmvbyYear <- aggregate(baltLAmv$Emissions,
by=list(Year=baltLAmv$year, fips=baltLAmv$fips),
FUN=sum)
baltLAmvbyYear
baltLAmvbyYear$fips <- rep(c("Los Angeles, CA", "Baltimore, MD"), each=4)
baltLAmvbyYear
# plot
library(ggplot2)
qplot(data=baltLAmvbyYear, Year, x, facets = .~fips,
main="Motor Vehicle Total PM2.5 Emission Trends by City",
xlab="Year", ylab="Total MV Emissions (tons)")
## open graphics device - dimensions are different than default for clarity
png(file = "plot5.png", width = 800, height = 400, units = "px")
## plot
library(ggplot2)
qplot(data=baltLAmvbyYear, Year, x, facets = .~fips,
main="Motor Vehicle Total PM2.5 Emission Trends by City",
xlab="Year", ylab="Total MV Emissions (tons)")
## close graphics device
dev.off()
## open graphics device - dimensions are different than default for clarity
png(file = "plot6.png", width = 800, height = 400, units = "px")
## plot
library(ggplot2)
qplot(data=baltLAmvbyYear, Year, x, facets = .~fips,
main="Motor Vehicle Total PM2.5 Emission Trends by City",
xlab="Year", ylab="Total MV Emissions (tons)")
## close graphics device
dev.off()
## open graphics device
png(file = "plot5.png", width = 480, height = 480, units = "px")
## plot
plot(baltMVByYear$Year, baltMVByYear$x, pch=19,
main="Total Yearly PM2.5 Emissions: Motor Vehicles in Baltimore, MD",
xlab="Year", ylab="Total MV Emissions (tons)", xlim=c(1998, 2010))
abline(lm(baltMVByYear$x ~ baltMVByYear$Year))
text(baltMVByYear$Year + 0.5, baltMVByYear$x,
labels=c("1999", "2002", "2005", "2008"))
## close graphics device
dev.off()
## open graphics device - dimensions are different than default for clarity
png(file = "plot6.png", width = 600, height = 400, units = "px")
## plot
library(ggplot2)
qplot(data=baltLAmvbyYear, Year, x, facets = .~fips,
main="Motor Vehicle Total PM2.5 Emission Trends by City",
xlab="Year", ylab="Total MV Emissions (tons)")
## close graphics device
dev.off()
